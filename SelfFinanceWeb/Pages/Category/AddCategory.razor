@page "/AddCategory"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using SelfFinance.Shared.Dtos.CategoryDtos
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Add Category</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@if (category == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="category" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Name:</label>
            <InputText @bind-Value="category.Name" class="form-control" />
        </div>

        <div class="mb-3 form-check">
            <InputCheckbox @bind-Value="category.IsIncome" class="form-check-input" id="isIncomeCheckbox" />
            <label class="form-check-label" for="isIncomeCheckbox">Income</label>
        </div>

        <button type="submit" class="btn btn-success">Save</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Cancel</button>
    </EditForm>
}

@code {
    private CreateCategoryDto category;
    private string errorMessage;

    protected override void OnInitialized()
    {
        category = new CreateCategoryDto();
    }

    private async Task HandleValidSubmit()
    {
        errorMessage = null;
        var response = await Http.PostAsJsonAsync("api/categories", category);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/Categories");
        }
        else
        {
            errorMessage = "Create failed. Please try again.";
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/Categories");
    }
}
