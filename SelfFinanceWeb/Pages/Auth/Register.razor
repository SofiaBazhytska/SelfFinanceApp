@page "/register"
@layout EmptyLayout
@using SelfFinance.Shared.Dtos.UserDtos
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Register</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="registerModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Username:</label>
        <InputText @bind-Value="registerModel.UserName" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-success">Register</button>
</EditForm>

@code {
    private UserDto registerModel = new UserDto();
    private string errorMessage;

    public class RegisterDto
    {
        public string UserName { get; set; }

        public string Password { get; set; }
    }

    private async Task HandleValidSubmit()
    {
        errorMessage = null;

        var response = await Http.PostAsJsonAsync("api/auth/register", registerModel);

        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            errorMessage = "Registration failed. Please try again.";
        }
    }
}
